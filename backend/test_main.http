### 登录（JSON）
POST http://127.0.0.1:8000/api/v1/auth/login
Content-Type: application/json
Accept: application/json

{
  "username": "teacher1",
  "password": "teacher123"
}

> {%
// 从响应里取出 access_token，保存为全局变量，后续请求可直接用 {{access_token}}
const data = JSON.parse(response.body);
if (data && data.access_token) {
  client.global.set("access_token", data.access_token);
  client.log("Saved access_token");
} else {
  client.log("No access_token in response");
}
%}

###

### 获取当前用户
GET http://127.0.0.1:8000/api/v1/auth/me
Accept: application/json
Authorization: Bearer {{access_token}}

###

### 健康检查
GET http://127.0.0.1:8000/api/v1/health
Accept: application/json

###

### 版本信息
GET http://127.0.0.1:8000/api/v1/version
Accept: application/json

################################################################
# ↓↓↓ Shops 模块接口测试 ↓↓↓
################################################################

### 创建店铺（若已存在多个店铺可重复创建）
POST http://127.0.0.1:8000/api/v1/shops
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "name": "Teacher One Shop",
  "initial_balance": 1000.50
}

> {%
// 保存创建成功的店铺ID，后续查询/修改/删除使用
try {
  const data = JSON.parse(response.body);
  if (data && data.id) {
    client.global.set("shop_id", String(data.id));
    client.log("Saved shop_id = " + data.id);
  } else {
    client.log("No shop id in response (maybe already exists)");
  }
} catch(e) {
  client.log("Create shop response not JSON or error: " + e.message);
}
%}

###

### 我的所有店铺（可选：?status=active / closed）
GET http://127.0.0.1:8000/api/v1/shops/mine
Authorization: Bearer {{access_token}}
Accept: application/json

> {%
// 如果返回列表非空，兜底保存第一个店铺ID
try {
  const list = JSON.parse(response.body);
  if (Array.isArray(list) && list.length > 0 && list[0].id) {
    client.global.set("shop_id", String(list[0].id));
    client.log("Ensured shop_id = " + list[0].id);
  } else {
    client.log("No shops for current user");
  }
} catch(e) {
  client.log("Mine response not JSON or error: " + e.message);
}
%}

###

### 按 ID 查看店铺（需要 admin 或店主本人）
GET http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

################################################################
# ↓↓↓ 新增：更新店铺（PATCH）与删除店铺（DELETE）↓↓↓
################################################################

### 更新店铺名称（PATCH）
PATCH http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "name": "Teacher One Shop - Renamed"
}

###

### 验证更新后的店铺（GET by id）
GET http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

###

### 更新店铺状态为 closed（PATCH）
PATCH http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}
Content-Type: application/json
Accept: application/json

{
  "status": "closed"
}

###

### 按状态筛选我的店铺（仅 closed）
GET http://127.0.0.1:8000/api/v1/shops/mine?status=closed
Authorization: Bearer {{access_token}}
Accept: application/json

###

### 删除店铺（DELETE，幂等：不存在也返回 204）
DELETE http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}

###

### 尝试再次获取被删除的店铺（应返回 404）
GET http://127.0.0.1:8000/api/v1/shops/{{shop_id}}
Authorization: Bearer {{access_token}}
Accept: application/json

################################################################
# ↓↓↓ Auth 注册相关测试（保留）↓↓↓
################################################################

### 注册新用户（如重复请改用户名/邮箱）
POST http://127.0.0.1:8000/api/v1/auth/register
Content-Type: application/json
Accept: application/json

{
  "username": "new_user_01",
  "password": "abc12345",
  "display_name": "New User 01",
  "email": "new_user_01@example.com"
}

###

### 用新用户登录（另存 token 为 {{register_access_token}}）
POST http://127.0.0.1:8000/api/v1/auth/login
Content-Type: application/json
Accept: application/json

{
  "username": "new_user_01",
  "password": "abc12345"
}

> {%
// 保存注册用户的 token 到单独变量，避免影响 teacher1 的 {{access_token}}
const data = JSON.parse(response.body);
if (data && data.access_token) {
  client.global.set("register_access_token", data.access_token);
  client.log("Saved register_access_token");
} else {
  client.log("No access_token in response");
}
%}

###

### 获取“注册用户”的当前用户信息
GET http://127.0.0.1:8000/api/v1/auth/me
Accept: application/json
Authorization: Bearer {{register_access_token}}
